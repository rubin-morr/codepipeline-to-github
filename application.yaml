# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Update a GitHub commit status via CodePipeline events

# More info about Parameters: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html
Parameters:

  ApplicationName:
    Description: 'used to create the name of the application in cloud formation'
    Type: String
    Default: 'codepipeline-to-github'
    AllowedPattern: '[a-zA-Z0-9-_]*'
    MinLength: 3
    MaxLength: 64
    ConstraintDescription: 'must be a valid application name'

  ApplicationStageName:
    Description: 'used for the de-coupling based on environment (IE: production)'
    Type: String
    AllowedPattern: '[a-zA-Z0-9-_]*'
    MinLength: 1
    MaxLength: 16
    Default: 'production'
    ConstraintDescription: 'must be a valid stage name (IE: dev, staging, production)'

  ApplicationBucket:
    Type: String
    Description: 'Pre-existing S3 bucket that will store the application files for deployment'
    MinLength: 5
    Default: 'cloudformation-distribution-raw-files'
    AllowedPattern: "[A-Za-z0-9-_]+"
    ConstraintDescription: 'must be a valid s3 bucket location'

  GitHubOwner:
    Type: String
    Description: 'the repository owner or username'
    Default: "mrz1836"
    MinLength: 2
    AllowedPattern: "[A-Za-z0-9-]+"
    ConstraintDescription: 'must be a valid repository username'

  GitHubRepo:
    Type: String
    Description: 'the repository name'
    Default: "codepipeline-to-github"
    MinLength: 1
    AllowedPattern: "[A-Za-z0-9-_]+"
    ConstraintDescription: 'must be a valid repository name'

  GitHubBranch:
    Type: String
    Description: 'the repository branch that will trigger automatic deployments'
    Default: "master"
    MinLength: 1
    AllowedPattern: "[A-Za-z0-9-_]+"
    ConstraintDescription: 'must be a valid branch name'

# More info about MetaData: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-publishing-applications-metadata-properties.html
Metadata:
  AWS::ServerlessRepo::Application:
    Name: !Sub '${ApplicationName}-${ApplicationStageName}'
    Description: 'Update a GitHub commit status via CodePipeline events'
    Author: MrZ
    #ReadmeUrl: README.md
    Labels: ['lambda','github','codepipeline']
    HomePageUrl: !Sub 'https://github.com/${GitHubOwner}/${GitHubRepo}'
    SemanticVersion: "0.0.1"
    SourceCodeUrl: !Sub 'https://github.com/${GitHubOwner}/${GitHubRepo}'

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    MemorySize: 256
    Timeout: 5
    Runtime: go1.x
    CodeUri: 'functions'
    Environment:
      Variables:
        GITHUB_ACCESS_TOKEN: "{{resolve:ssm:/github/personal_access_token:1}}"

# More info about Resources: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-resources-and-properties.html
Resources:
  StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ApplicationName}-${ApplicationStageName}'
      CodeUri: releases/status/.
      Handler: status
      Policies:
        - AWSCodePipelineReadOnlyAccess
        - AWSLambdaBasicExecutionRole
      Events:
        Event:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - aws.codepipeline
              detail-type:
                - "CodePipeline Pipeline Execution State Change"
              detail:
                state:
                  - "STARTED"
                  - "SUCCEEDED"
                  - "FAILED"

  StatusFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${StatusFunction}'
      RetentionInDays: 90

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn:
      - CodeBuildProject
    Properties:
      Name: !Sub "${ApplicationName}-${ApplicationStageName}-deployment"
      ArtifactStore:
        Type: S3
        Location: !Ref ApplicationBucket
      RestartExecutionOnUpdate: false
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source-From-Github
              InputArtifacts: []
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: "{{resolve:ssm:/github/personal_access_token:1}}"
        - Name: Build
          Actions:
            - Name: Build-and-Deploy-Stack
              RunOrder: 3
              InputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: CodeBuildProject

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ApplicationName}-${ApplicationStageName}-build-deploy"
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Sub "${AWS::Region}"
          - Name: APPLICATION_STACK_NAME
            Type: PLAINTEXT
            Value: !Sub "${ApplicationName}-${ApplicationStageName}"
          - Name: APPLICATION_BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref ApplicationBucket
          - Name: APPLICATION_STAGE
            Type: PLAINTEXT
            Value: !Ref ApplicationStageName
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec.yml"
      TimeoutInMinutes: 15

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    DependsOn:
      - CodePipeline
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:ssm:/github/personal_access_token:1}}"
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source-From-Github
      TargetPipelineVersion: !GetAtt CodePipeline.Version

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codebuild.amazonaws.com
              - cloudformation.amazonaws.com
              - s3.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - s3.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

# More info about Outputs: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
Outputs:
  StatusFunction:
    Description: 'Affected Function: Status (ARN)'
    Value: !GetAtt StatusFunction.Arn
  AutomaticDeployment:
    Description: 'CI/CD Integration'
    Value: !Sub 'pushing to ${GitHubOwner}/${GitHubRepo}:${GitHubBranch} will deploy to: ${ApplicationStageName}'